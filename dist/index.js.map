{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap ace37edc40d23eb09a8e","webpack:///./src/index.ts","webpack:///external \"angular\"","webpack:///./src/star-rating.controller.ts","webpack:///./src/star-rating.component.ts","webpack:///./src/star-rating.tpl.html"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","star_rating_controller_1","star_rating_component_1","star_rating_controller_2","StarRatingController","star_rating_component_2","StarRatingComponent","angularStars","angular","controller","component","name","this","classEmpty","DefaultClassEmpty","classHalf","DefaultClassHalf","classFilled","DefaultClassFilled","pathEmpty","DefaultSvgPathEmpty","pathHalf","DefaultSvgPathHalf","pathFilled","DefaultSvgPathFilled","_showHoverStars","DefaultShowHoverStars","labelHidden","DefaultLabelHidden","_numOfStars","DefaultNumOfStars","stars","_getStarsArray","numOfStars","setColor","i","push","_getHalfStarVisible","rating","_getColor","staticColor","Object","defineProperty","prototype","get","set","value","enumerable","configurable","_rating","undefined","newRating","ratingAsInteger","parseInt","toString","setHalfStarVisible","$event","onRatingChange","_showHalfStars","_disabled","_readOnly","_space","_starType","DefaultStarType","_size","DefaultSize","_speed","DefaultSpeed","_labelPosition","DefaultLabelPosition","_labelHidden","_staticColor","_labelText","_id","Math","random","getComponentClassNames","classNames","abs","ceil","showHoverStars","hoverRating","halfStarVisible","space","labelPosition","color","starType","speed","size","readOnly","disabled","join","svgVisible","showHalfStars","absDiff","$onChanges","changes","valueChanged","key","currentValue","previousValue","getColor","getHalfStarVisible","labelText","onStarClicked","interactionPossible","onClick","onStarHover","onHover","getClosest","elem","selector","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","document","ownerDocument","querySelectorAll","length","item","parentNode","DefaultAssetsPath","DefaultSvgPath","DefaultSvgEmptySymbolId","DefaultSvgHalfSymbolId","DefaultSvgFilledSymbolId","starRatingTpl","bindings","replace","templateUrl","path","html","window","run","put"],"mappings":"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","file":"index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t__webpack_require__(1);\n\tvar star_rating_controller_1 = __webpack_require__(2);\n\tvar star_rating_component_1 = __webpack_require__(3);\n\tvar icons = icons;\n\tvar star_rating_controller_2 = __webpack_require__(2);\n\texports.StarRatingController = star_rating_controller_2.StarRatingController;\n\tvar star_rating_component_2 = __webpack_require__(3);\n\texports.StarRatingComponent = star_rating_component_2.StarRatingComponent;\n\texports.angularStars = angular\n\t    .module('star-rating', [])\n\t    .controller('starRatingCtrl', star_rating_controller_1.StarRatingController)\n\t    .component('starRatingComp', new star_rating_component_1.StarRatingComponent())\n\t    .name;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = angular;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar StarRatingController = (function () {\n\t    function StarRatingController() {\n\t        //set default ctrl props\n\t        this.classEmpty = StarRatingController.DefaultClassEmpty;\n\t        this.classHalf = StarRatingController.DefaultClassHalf;\n\t        this.classFilled = StarRatingController.DefaultClassFilled;\n\t        this.pathEmpty = StarRatingController.DefaultSvgPathEmpty;\n\t        this.pathHalf = StarRatingController.DefaultSvgPathHalf;\n\t        this.pathFilled = StarRatingController.DefaultSvgPathFilled;\n\t        //set default Component Inputs\n\t        this._showHoverStars = StarRatingController.DefaultShowHoverStars;\n\t        this.labelHidden = StarRatingController.DefaultLabelHidden;\n\t        this._numOfStars = StarRatingController.DefaultNumOfStars;\n\t        this.stars = StarRatingController._getStarsArray(this.numOfStars);\n\t        this.setColor();\n\t        //set default Outputs\n\t    }\n\t    /**\n\t     * _getStarsArray\n\t     *\n\t     * returns an array of increasing numbers starting at 1\n\t     *\n\t     * @param numOfStars\n\t     * @returns {Array}\n\t     */\n\t    StarRatingController._getStarsArray = function (numOfStars) {\n\t        var stars = [];\n\t        for (var i = 0; i < numOfStars; i++) {\n\t            stars.push(i + 1);\n\t        }\n\t        return stars;\n\t    };\n\t    /**\n\t     * _getHalfStarVisible\n\t     *\n\t     * Returns true if there should be a half star visible, and false if not.\n\t     *\n\t     * @param rating\n\t     * @returns {boolean}\n\t     */\n\t    StarRatingController._getHalfStarVisible = function (rating) {\n\t    };\n\t    /**\n\t     * _getColor\n\t     *\n\t     * The default function for color calculation\n\t     * based on the current rating and the the number of stars possible.\n\t     * If a staticColor is set the function will use it as return value.\n\t     *\n\t     * @param rating\n\t     * @param numOfStars\n\t     * @param staticColor\n\t     * @returns {starRatingColors}\n\t     */\n\t    StarRatingController._getColor = function (rating, numOfStars, staticColor) {\n\t        rating = rating || 0;\n\t        //if a fix color is set use this one\n\t        if (staticColor) {\n\t            return staticColor;\n\t        }\n\t        // //calculate size of smallest fraction\n\t        // let fractionSize = numOfStars / 3;\n\t        //\n\t        // //apply color by fraction\n\t        // let color: starRatingColors = 'default';\n\t        // if (rating > 0) {\n\t        //     color = 'negative';\n\t        // }\n\t        // if (rating > fractionSize) {\n\t        //     color = 'ok';\n\t        // }\n\t        // if (rating > fractionSize * 2) {\n\t        //     color = 'positive';\n\t        // }\n\t        //\n\t        // return color;\n\t    };\n\t    Object.defineProperty(StarRatingController.prototype, \"numOfStars\", {\n\t        get: function () {\n\t            return this._numOfStars || StarRatingController.DefaultNumOfStars;\n\t        },\n\t        //getter and setter\n\t        set: function (value) {\n\t            this._numOfStars = (value > 0) ? value : StarRatingController.DefaultNumOfStars;\n\t            //update stars array\n\t            this.stars = StarRatingController._getStarsArray(this.numOfStars);\n\t            //update color\n\t            this.setColor();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"rating\", {\n\t        get: function () {\n\t            return this._rating;\n\t        },\n\t        set: function (value) {\n\t            if (value === undefined) {\n\t                return;\n\t            }\n\t            //validate and apply newRating\n\t            var newRating = 0;\n\t            if (value >= 0\n\t                && value <= this.numOfStars) {\n\t                newRating = value;\n\t            }\n\t            //limit max value to max number of stars\n\t            if (value > this.numOfStars) {\n\t                newRating = this.numOfStars;\n\t            }\n\t            this._rating = newRating;\n\t            //update ratingAsInteger. rating parsed to int for the value-[n] modifier\n\t            this.ratingAsInteger = parseInt(this._rating.toString());\n\t            //update halfStarsVisible\n\t            this.setHalfStarVisible();\n\t            //update calculated Color\n\t            //this.setColor();\n\t            //fire onRatingChange event\n\t            var $event = { rating: this._rating };\n\t            if (typeof this.onRatingChange === 'function') {\n\t                this.onRatingChange({ $event: $event });\n\t            }\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"showHalfStars\", {\n\t        get: function () {\n\t            return this._showHalfStars;\n\t        },\n\t        set: function (value) {\n\t            this._showHalfStars = !!value;\n\t            //update halfStarVisible\n\t            this.setHalfStarVisible();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"showHoverStars\", {\n\t        get: function () {\n\t            return this._showHoverStars;\n\t        },\n\t        set: function (value) {\n\t            this._showHoverStars = !!value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"disabled\", {\n\t        get: function () {\n\t            return this._disabled;\n\t        },\n\t        set: function (value) {\n\t            this._disabled = !!value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"readOnly\", {\n\t        get: function () {\n\t            return this._readOnly;\n\t        },\n\t        set: function (value) {\n\t            this._readOnly = !!value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"space\", {\n\t        get: function () {\n\t            return this._space;\n\t        },\n\t        set: function (value) {\n\t            this._space = value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"starType\", {\n\t        get: function () {\n\t            return this._starType;\n\t        },\n\t        set: function (value) {\n\t            this._starType = value || StarRatingController.DefaultStarType;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"size\", {\n\t        get: function () {\n\t            return this._size;\n\t        },\n\t        set: function (value) {\n\t            this._size = value || StarRatingController.DefaultSize;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"speed\", {\n\t        get: function () {\n\t            return this._speed;\n\t        },\n\t        set: function (value) {\n\t            this._speed = value || StarRatingController.DefaultSpeed;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"labelPosition\", {\n\t        get: function () {\n\t            return this._labelPosition;\n\t        },\n\t        set: function (value) {\n\t            this._labelPosition = value || StarRatingController.DefaultLabelPosition;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"labelHidden\", {\n\t        get: function () {\n\t            return this._labelHidden;\n\t        },\n\t        set: function (value) {\n\t            this._labelHidden = !!value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"staticColor\", {\n\t        get: function () {\n\t            return this._staticColor;\n\t        },\n\t        set: function (value) {\n\t            this._staticColor = value || undefined;\n\t            //update color.\n\t            this.setColor();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"labelText\", {\n\t        get: function () {\n\t            return this._labelText;\n\t        },\n\t        set: function (value) {\n\t            this._labelText = value;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(StarRatingController.prototype, \"id\", {\n\t        get: function () {\n\t            return this._id;\n\t        },\n\t        set: function (value) {\n\t            this._id = value || (Math.random() * 10000).toString();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    StarRatingController.prototype.getComponentClassNames = function () {\n\t        var classNames = [];\n\t        if ((Math.abs(this.rating % 1)) > 0.75) {\n\t            classNames.push(this.rating ? 'value-' + Math.ceil(this.rating) : 'value-0');\n\t        }\n\t        else {\n\t            classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\n\t        }\n\t        classNames.push(this.showHoverStars ? 'hover' : '');\n\t        classNames.push(this.hoverRating ? 'hover-' + this.hoverRating : 'hover-0');\n\t        classNames.push(this.halfStarVisible ? 'half' : '');\n\t        classNames.push(this.space ? 'space-' + this.space : '');\n\t        classNames.push(this.labelHidden ? 'label-hidden' : 'label-visible');\n\t        classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\n\t        classNames.push(this.color ? 'color-' + this.color : '');\n\t        classNames.push(this.starType ? 'star-' + this.starType : '');\n\t        classNames.push(this.speed);\n\t        classNames.push(this.size);\n\t        classNames.push(this.readOnly ? 'read-only' : '');\n\t        classNames.push(this.disabled ? 'disabled' : '');\n\t        return classNames.join(' ');\n\t    };\n\t    StarRatingController.prototype.svgVisible = function () {\n\t        return this.starType === \"svg\";\n\t    };\n\t    StarRatingController.prototype.setColor = function () {\n\t        this.color = this.staticColor;\n\t    };\n\t    StarRatingController.prototype.setHalfStarVisible = function () {\n\t        //update halfStarVisible\n\t        if (this.showHalfStars) {\n\t            var absDiff = (Math.abs(this.rating % 1));\n\t            if (absDiff >= 0.25 && absDiff <= 0.75) {\n\t                this.halfStarVisible = true;\n\t            }\n\t            else\n\t                this.halfStarVisible = false;\n\t        }\n\t        else {\n\t            this.halfStarVisible = false;\n\t        }\n\t    };\n\t    /**\n\t     * $onChanges\n\t     *\n\t     * The components $onChange hook\n\t     *\n\t     * @param changes\n\t     */\n\t    StarRatingController.prototype.$onChanges = function (changes) {\n\t        var valueChanged = function (key, changes) {\n\t            if (key in changes) {\n\t                if (\n\t                //(changes[key].previousValue != 'UNINITIALIZED_VALUE' && changes[key].currentValue !== undefined)\n\t                changes[key].currentValue != changes[key].previousValue) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        };\n\t        //---------------------------------------\n\t        //functions\n\t        //@Notice For some reason callback functions is not defined even there are defaults in the constructor\n\t        if (valueChanged('getColor', changes)) {\n\t            this.getColor = changes.getColor.currentValue;\n\t            this.setColor();\n\t        }\n\t        if (valueChanged('getHalfStarVisible', changes)) {\n\t            this.getHalfStarVisible = changes.getHalfStarVisible.currentValue;\n\t            this.setHalfStarVisible();\n\t        }\n\t        //boolean\n\t        if (valueChanged('showHalfStars', changes)) {\n\t            this.showHalfStars = changes.showHalfStars.currentValue;\n\t        }\n\t        if (valueChanged('space', changes)) {\n\t            this.space = changes.space.currentValue;\n\t        }\n\t        if (valueChanged('readOnly', changes)) {\n\t            this.readOnly = changes.readOnly.currentValue;\n\t        }\n\t        if (valueChanged('disabled', changes)) {\n\t            this.disabled = changes.disabled.currentValue;\n\t        }\n\t        if (valueChanged('labelHidden', changes)) {\n\t            this.labelHidden = changes.labelHidden.currentValue;\n\t        }\n\t        //number\n\t        if (valueChanged('rating', changes)) {\n\t            this.rating = changes.rating.currentValue;\n\t        }\n\t        if (valueChanged('numOfStars', changes)) {\n\t            this.numOfStars = changes.numOfStars.currentValue;\n\t        }\n\t        //string\n\t        if (valueChanged('labelText', changes)) {\n\t            this.labelText = changes.labelText.currentValue;\n\t        }\n\t        if (valueChanged('staticColor', changes)) {\n\t            this.staticColor = changes.staticColor.currentValue;\n\t        }\n\t        if (valueChanged('size', changes)) {\n\t            this.size = changes.size.currentValue;\n\t        }\n\t        if (valueChanged('speed', changes)) {\n\t            this.speed = changes.speed.currentValue;\n\t        }\n\t        if (valueChanged('labelPosition', changes)) {\n\t            this.labelPosition = changes.labelPosition.currentValue;\n\t        }\n\t        if (valueChanged('starType', changes)) {\n\t            this.starType = changes.starType.currentValue;\n\t        }\n\t    };\n\t    /**\n\t     * onStarClicked\n\t     *\n\t     * Is fired when a star is clicked. And updated the rating value.\n\t     * This function returns if the disabled or readOnly\n\t     * property is set. If provided it emits the onClick event\n\t     * handler with the actual rating value.\n\t     *\n\t     * @param rating\n\t     */\n\t    StarRatingController.prototype.onStarClicked = function (rating) {\n\t        if (!this.interactionPossible()) {\n\t            return;\n\t        }\n\t        this.rating = rating;\n\t        //fire onClick event\n\t        var $event = { rating: rating };\n\t        if (typeof this.onClick === 'function') {\n\t            this.onClick({ $event: $event });\n\t        }\n\t    };\n\t    StarRatingController.prototype.onStarHover = function (rating) {\n\t        if (!this.interactionPossible() || !this.showHoverStars) {\n\t            return;\n\t        }\n\t        this.hoverRating = rating ? parseInt(rating.toString()) : 0;\n\t        //fire onHover event\n\t        var $event = { hoverRating: this.hoverRating };\n\t        if (typeof this.onHover === 'function') {\n\t            this.onHover({ $event: $event });\n\t        }\n\t    };\n\t    StarRatingController.prototype.interactionPossible = function () {\n\t        return !this.readOnly && !this.disabled;\n\t    };\n\t    /**\n\t     * Get the closest matching element up the DOM tree.\n\t     * @private\n\t     * @param  {Element} elem     Starting element\n\t     * @param  {String}  selector Selector to match against\n\t     * @return {Boolean|Element}  Returns null if not match found\n\t     */\n\t    StarRatingController.prototype.getClosest = function (elem, selector) {\n\t        // Element.matches() polyfill\n\t        if (!Element.prototype.matches) {\n\t            Element.prototype.matches =\n\t                Element.prototype.matchesSelector ||\n\t                    Element.prototype.mozMatchesSelector ||\n\t                    Element.prototype.msMatchesSelector ||\n\t                    Element.prototype.oMatchesSelector ||\n\t                    Element.prototype.webkitMatchesSelector ||\n\t                    function (s) {\n\t                        var matches = (this.document || this.ownerDocument).querySelectorAll(s), i = matches.length;\n\t                        while (--i >= 0 && matches.item(i) !== this) {\n\t                        }\n\t                        return i > -1;\n\t                    };\n\t        }\n\t        // Get closest match\n\t        for (; elem && elem !== document; elem = elem.parentNode) {\n\t            if (elem.matches(selector))\n\t                return elem;\n\t        }\n\t        return null;\n\t    };\n\t    return StarRatingController;\n\t}());\n\texports.StarRatingController = StarRatingController;\n\tStarRatingController.DefaultClassEmpty = \"default-star-empty-icon\";\n\tStarRatingController.DefaultClassHalf = \"default-star-half-icon\";\n\tStarRatingController.DefaultClassFilled = \"default-star-filled-icon\";\n\tStarRatingController.DefaultNumOfStars = 5;\n\tStarRatingController.DefaultShowHoverStars = false;\n\tStarRatingController.DefaultSize = \"medium\";\n\tStarRatingController.DefaultSpeed = \"noticeable\";\n\tStarRatingController.DefaultLabelPosition = \"left\";\n\tStarRatingController.DefaultLabelHidden = false;\n\tStarRatingController.DefaultStarType = \"svg\";\n\tStarRatingController.DefaultAssetsPath = \"img/\";\n\tStarRatingController.DefaultSvgPath = StarRatingController.DefaultAssetsPath + \"star-rating.icons.svg\";\n\tStarRatingController.DefaultSvgEmptySymbolId = \"star-empty\";\n\tStarRatingController.DefaultSvgHalfSymbolId = \"star-half\";\n\tStarRatingController.DefaultSvgFilledSymbolId = \"star-filled\";\n\tStarRatingController.DefaultSvgPathEmpty = StarRatingController.DefaultSvgPath + \"#\" + StarRatingController.DefaultSvgEmptySymbolId;\n\tStarRatingController.DefaultSvgPathHalf = StarRatingController.DefaultSvgPath + \"#\" + StarRatingController.DefaultSvgHalfSymbolId;\n\tStarRatingController.DefaultSvgPathFilled = StarRatingController.DefaultSvgPath + \"#\" + StarRatingController.DefaultSvgFilledSymbolId;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar star_rating_controller_1 = __webpack_require__(2);\n\tvar starRatingTpl = __webpack_require__(4);\n\tvar StarRatingComponent = (function () {\n\t    function StarRatingComponent() {\n\t        this.bindings = {\n\t            id: '<',\n\t            rating: '<',\n\t            showHalfStars: '<',\n\t            showHoverStars: '<',\n\t            numOfStars: '<',\n\t            size: '<',\n\t            space: '<',\n\t            staticColor: '<',\n\t            disabled: '<',\n\t            starType: '<',\n\t            labelText: '<',\n\t            labelHidden: '<',\n\t            labelPosition: '<',\n\t            speed: '<',\n\t            readOnly: '<',\n\t            getColor: '<',\n\t            getHalfStarVisible: '<',\n\t            onHover: '&',\n\t            onClick: '&',\n\t            onRatingChange: '&'\n\t        };\n\t        this.replace = true;\n\t        this.controller = star_rating_controller_1.StarRatingController;\n\t        this.templateUrl = starRatingTpl;\n\t    }\n\t    return StarRatingComponent;\n\t}());\n\texports.StarRatingComponent = StarRatingComponent;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\tvar path = 'src/star-rating.tpl.html';\n\tvar html = \"<div id={{$ctrl.id}} class=rating ng-class=$ctrl.getComponentClassNames()> <div ng-show=$ctrl.labelText class=label-value>{{$ctrl.labelText}}</div> <div class=star-container ng-mouseleave=$ctrl.onStarHover()> <div class=star ng-repeat=\\\"star in $ctrl.stars track by $index\\\" ng-click=$ctrl.onStarClicked(star) ng-mouseover=$ctrl.onStarHover(star)> <i class=\\\"star-empty {{$ctrl.classEmpty}}\\\" ng-if=!$ctrl.svgVisible()></i> <i class=\\\"star-half {{$ctrl.classHalf}}\\\" ng-if=!$ctrl.svgVisible()></i> <i class=\\\"star-filled {{$ctrl.classFilled}}\\\" ng-if=!$ctrl.svgVisible()></i> <svg class=\\\"star-empty {{$ctrl.classEmpty}}\\\" ng-if=$ctrl.svgVisible()> <use xmlns:xlink=http://www.w3.org/1999/xlink xlink:href={{$ctrl.pathEmpty}}></use> </svg> <svg class=\\\"star-half {{$ctrl.classHalf}}\\\" ng-if=$ctrl.svgVisible()> <use xmlns:xlink=http://www.w3.org/1999/xlink xlink:href={{$ctrl.pathHalf}}></use> </svg> <svg class=\\\"star-filled {{$ctrl.classFilled}}\\\" ng-if=$ctrl.svgVisible()> <use xmlns:xlink=http://www.w3.org/1999/xlink xlink:href={{$ctrl.pathFilled}}></use> </svg> </div> </div> </div>\";\n\twindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\n\tmodule.exports = path;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ace37edc40d23eb09a8e","import \"angular\";\n\nimport {StarRatingController} from \"./star-rating.controller\";\nimport {StarRatingComponent} from \"./star-rating.component\";\n\nconst icons = icons;\n\nexport {\n      starRatingSizes\n    , starRatingColors\n    , starRatingSpeed\n    , starRatingPosition\n    , starRatingStarTypes\n    , starRatingStarSpace\n    , IStarRatingCompBindings\n    , IStarRatingOnClickEvent\n    , IStarRatingOnUpdateEvent\n} from \"./star-rating.structs\"\nexport {StarRatingController} from \"./star-rating.controller\";\nexport {StarRatingComponent} from \"./star-rating.component\";\n\nexport const angularStars = angular\n    .module('star-rating', [])\n    .controller('starRatingCtrl', StarRatingController)\n    .component('starRatingComp', new StarRatingComponent())\n    .name;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 1\n// module chunks = 0","import {\n    IStarRatingCompBindings\n    , starRatingSizes\n    , starRatingSpeed\n    , starRatingPosition\n    , starRatingStarTypes\n    , starRatingColors\n    , starRatingStarSpace\n    , IStarRatingOnClickEvent\n    , IStarRatingOnUpdateEvent, IStarRatingOnHoverEvent\n} from \"star-rating.structs\"\n\nexport class StarRatingController implements ng.IComponentController, IStarRatingCompBindings {\n\n    static DefaultClassEmpty: string = \"default-star-empty-icon\";\n\n    static DefaultClassHalf: string = \"default-star-half-icon\";\n\n    static DefaultClassFilled: string = \"default-star-filled-icon\";\n\n    static DefaultNumOfStars: number = 5;\n\n    static DefaultShowHoverStars:boolean = false;\n\n    static DefaultSize: starRatingSizes = \"medium\";\n\n    static DefaultSpeed: starRatingSpeed = \"noticeable\";\n\n    static DefaultLabelPosition: starRatingPosition = \"left\";\n\n    static DefaultLabelHidden: boolean = false;\n\n    static DefaultStarType: starRatingStarTypes = \"svg\";\n\n    static DefaultAssetsPath: string = \"img/\";\n\n    static DefaultSvgPath: string = StarRatingController.DefaultAssetsPath + \"star-rating.icons.svg\";\n    static DefaultSvgEmptySymbolId: string = \"star-empty\";\n    static DefaultSvgHalfSymbolId: string = \"star-half\";\n    static DefaultSvgFilledSymbolId: string = \"star-filled\";\n\n    static DefaultSvgPathEmpty: string = StarRatingController.DefaultSvgPath + \"#\" + StarRatingController.DefaultSvgEmptySymbolId;\n\n    static DefaultSvgPathHalf: string = StarRatingController.DefaultSvgPath + \"#\" + StarRatingController.DefaultSvgHalfSymbolId;\n\n    static DefaultSvgPathFilled: string = StarRatingController.DefaultSvgPath + \"#\" + StarRatingController.DefaultSvgFilledSymbolId;\n\n\n    /**\n     * _getStarsArray\n     *\n     * returns an array of increasing numbers starting at 1\n     *\n     * @param numOfStars\n     * @returns {Array}\n     */\n    static _getStarsArray(numOfStars: number): Array<number> {\n        let stars = [];\n        for (let i = 0; i < numOfStars; i++) {\n            stars.push(i + 1);\n        }\n        return stars;\n    }\n\n    /**\n     * _getHalfStarVisible\n     *\n     * Returns true if there should be a half star visible, and false if not.\n     *\n     * @param rating\n     * @returns {boolean}\n     */\n    static _getHalfStarVisible(rating: number): boolean {\n    }\n\n    /**\n     * _getColor\n     *\n     * The default function for color calculation\n     * based on the current rating and the the number of stars possible.\n     * If a staticColor is set the function will use it as return value.\n     *\n     * @param rating\n     * @param numOfStars\n     * @param staticColor\n     * @returns {starRatingColors}\n     */\n    static _getColor(rating: number, numOfStars: number, staticColor?: starRatingColors): starRatingColors {\n        rating = rating || 0;\n\n        //if a fix color is set use this one\n        if (staticColor) {\n            return staticColor;\n        }\n\n        // //calculate size of smallest fraction\n        // let fractionSize = numOfStars / 3;\n        //\n        // //apply color by fraction\n        // let color: starRatingColors = 'default';\n        // if (rating > 0) {\n        //     color = 'negative';\n        // }\n        // if (rating > fractionSize) {\n        //     color = 'ok';\n        // }\n        // if (rating > fractionSize * 2) {\n        //     color = 'positive';\n        // }\n        //\n        // return color;\n    }\n\n\n    //bindings\n\n    //inputs\n    protected _id: string;\n    protected _labelText: string;\n    protected _staticColor: starRatingColors;\n    protected _labelPosition: starRatingPosition;\n    protected _labelHidden: boolean;\n    protected _speed: starRatingSpeed;\n    protected _size: starRatingSizes;\n    protected _starType: starRatingStarTypes;\n    protected _space: starRatingStarSpace;\n    protected _readOnly: boolean;\n    protected _disabled: boolean;\n    protected _showHalfStars: boolean;\n    protected _showHoverStars: boolean;\n    protected _rating: number;\n    protected _numOfStars: number;\n    getHalfStarVisible: (rating: number) => boolean;\n    getColor: (rating: number, numOfStars: number, staticColor?: starRatingColors) => starRatingColors;\n\n    //outputs\n    onHover?: ($event: any) =>  IStarRatingOnHoverEvent;\n    onClick?: ($event: any) =>  IStarRatingOnClickEvent;\n    onRatingChange?: ($event: any) => IStarRatingOnUpdateEvent;\n\n    //ctrl only\n    classEmpty: string;\n    classHalf: string;\n    classFilled: string;\n\n    pathEmpty: string;\n    pathHalf: string;\n    pathFilled: string;\n\n    color: starRatingColors;\n    stars: Array<number>;\n    hoverRating:number;\n    ratingAsInteger: number;\n    halfStarVisible: boolean;\n\n    //getter and setter\n    set numOfStars(value: number) {\n        this._numOfStars = (value > 0)?value:StarRatingController.DefaultNumOfStars;\n\n        //update stars array\n        this.stars = StarRatingController._getStarsArray(this.numOfStars);\n\n        //update color\n        this.setColor();\n    }\n    get numOfStars(): number {\n        return this._numOfStars || StarRatingController.DefaultNumOfStars;\n    }\n\n    set rating(value: number) {\n\n        if(value === undefined) {\n            return\n        }\n        //validate and apply newRating\n        let newRating:number = 0;\n        if( value >= 0\n            && value <= this.numOfStars) {\n            newRating = value;\n        }\n        //limit max value to max number of stars\n        if(value > this.numOfStars) {\n            newRating = this.numOfStars;\n        }\n        this._rating = newRating;\n        //update ratingAsInteger. rating parsed to int for the value-[n] modifier\n        this.ratingAsInteger = parseInt(this._rating.toString());\n\n        //update halfStarsVisible\n        this.setHalfStarVisible();\n\n        //update calculated Color\n        //this.setColor();\n\n        //fire onRatingChange event\n        let $event:IStarRatingOnUpdateEvent = {rating: this._rating};\n        if(typeof this.onRatingChange === 'function') {\n            this.onRatingChange({$event:$event});\n        }\n    }\n    get rating(): number {\n        return this._rating;\n    }\n\n    set showHalfStars(value: boolean) {\n        this._showHalfStars = !!value;\n        //update halfStarVisible\n        this.setHalfStarVisible();\n    }\n    get showHalfStars(): boolean {\n        return this._showHalfStars;\n    }\n\n    set showHoverStars(value: boolean) {\n        this._showHoverStars = !!value;\n    }\n    get showHoverStars(): boolean {\n        return this._showHoverStars;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = !!value;\n    }\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set readOnly(value: boolean) {\n        this._readOnly = !!value;\n    }\n    get readOnly(): boolean {\n        return this._readOnly;\n    }\n\n    set space(value: starRatingStarSpace) {\n        this._space = value;\n    }\n    get space(): starRatingStarSpace {\n        return this._space;\n    }\n\n    set starType(value: starRatingStarTypes) {\n        this._starType = value || StarRatingController.DefaultStarType;\n    }\n    get starType(): starRatingStarTypes {\n        return this._starType;\n    }\n\n    set size(value: starRatingSizes) {\n        this._size = value || StarRatingController.DefaultSize;\n    }\n    get size(): starRatingSizes {\n        return this._size;\n    }\n\n    set speed(value: starRatingSpeed) {\n        this._speed = value || StarRatingController.DefaultSpeed;\n    }\n    get speed(): starRatingSpeed {\n        return this._speed;\n    }\n\n    set labelPosition(value: starRatingPosition) {\n        this._labelPosition = value || StarRatingController.DefaultLabelPosition;\n    }\n    get labelPosition(): starRatingPosition {\n        return this._labelPosition;\n    }\n\n    set labelHidden(value: boolean) {\n        this._labelHidden = !!value;\n    }\n    get labelHidden(): boolean {\n        return this._labelHidden;\n    }\n\n\n    set staticColor(value: starRatingColors) {\n        this._staticColor = value || undefined;\n\n        //update color.\n        this.setColor();\n    }\n    get staticColor(): starRatingColors {\n        return this._staticColor;\n    }\n\n    set labelText(value: string) {\n        this._labelText = value;\n    }\n    get labelText(): string {\n        return this._labelText;\n    }\n\n    set id(value: string) {\n        this._id = value || (Math.random() * 10000).toString();\n    }\n    get id(): string {\n        return this._id;\n    }\n\n\n    getComponentClassNames():string {\n        let classNames:string[] = [];\n        if ((Math.abs(this.rating % 1)) > 0.75) {\n            classNames.push(this.rating?'value-'+Math.ceil(this.rating):'value-0');\n        }else {\n            classNames.push(this.rating?'value-'+this.ratingAsInteger:'value-0');\n        }\n        classNames.push(this.showHoverStars?'hover':'');\n        classNames.push(this.hoverRating?'hover-'+this.hoverRating:'hover-0');\n        classNames.push(this.halfStarVisible?'half':'');\n        classNames.push(this.space?'space-'+this.space:'');\n        classNames.push(this.labelHidden?'label-hidden':'label-visible');\n        classNames.push(this.labelPosition?'label-'+this.labelPosition:'');\n        classNames.push(this.color?'color-'+this.color:'');\n        classNames.push(this.starType?'star-'+this.starType:'');\n        classNames.push(this.speed);\n        classNames.push(this.size);\n        classNames.push(this.readOnly?'read-only':'');\n        classNames.push(this.disabled?'disabled':'');\n\n        return classNames.join(' ');\n    }\n\n    svgVisible():boolean {\n        return this.starType === \"svg\";\n    }\n\n    setColor() {\n        this.color = this.staticColor\n    }\n\n    setHalfStarVisible() {\n        //update halfStarVisible\n        if(this.showHalfStars) {\n\n            var absDiff = (Math.abs(this.rating % 1));\n            if(absDiff >= 0.25 && absDiff <= 0.75) {\n                this.halfStarVisible = true;\n            }else this.halfStarVisible = false;\n        }\n        else {\n            this.halfStarVisible = false;\n        }\n    }\n\n    constructor() {\n        //set default ctrl props\n        this.classEmpty = StarRatingController.DefaultClassEmpty;\n        this.classHalf = StarRatingController.DefaultClassHalf;\n        this.classFilled = StarRatingController.DefaultClassFilled;\n        this.pathEmpty = StarRatingController.DefaultSvgPathEmpty;\n        this.pathHalf = StarRatingController.DefaultSvgPathHalf;\n        this.pathFilled = StarRatingController.DefaultSvgPathFilled;\n\n        //set default Component Inputs\n        this._showHoverStars = StarRatingController.DefaultShowHoverStars;\n        this.labelHidden = StarRatingController.DefaultLabelHidden;\n        this._numOfStars = StarRatingController.DefaultNumOfStars;\n        this.stars = StarRatingController._getStarsArray(this.numOfStars);\n        this.setColor();\n\n        //set default Outputs\n\n    }\n\n\n    /**\n     * $onChanges\n     *\n     * The components $onChange hook\n     *\n     * @param changes\n     */\n    $onChanges(changes): void {\n        let valueChanged = function (key: string, changes): boolean {\n            if (key in changes) {\n                if (\n                    //(changes[key].previousValue != 'UNINITIALIZED_VALUE' && changes[key].currentValue !== undefined)\n                     changes[key].currentValue != changes[key].previousValue) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        //---------------------------------------\n\n        //functions\n        //@Notice For some reason callback functions is not defined even there are defaults in the constructor\n        if (valueChanged('getColor', changes)) {\n            this.getColor = changes.getColor.currentValue;\n            this.setColor();\n        }\n\n        if (valueChanged('getHalfStarVisible', changes)) {\n            this.getHalfStarVisible = changes.getHalfStarVisible.currentValue;\n            this.setHalfStarVisible();\n        }\n\n        //boolean\n        if (valueChanged('showHalfStars', changes)) {\n            this.showHalfStars = changes.showHalfStars.currentValue;\n        }\n\n        if (valueChanged('space', changes)) {\n            this.space = changes.space.currentValue;\n        }\n\n        if (valueChanged('readOnly', changes)) {\n            this.readOnly = changes.readOnly.currentValue;\n        }\n\n        if (valueChanged('disabled', changes)) {\n            this.disabled = changes.disabled.currentValue;\n        }\n\n        if(valueChanged('labelHidden', changes)) {\n            this.labelHidden = changes.labelHidden.currentValue\n        }\n\n        //number\n        if (valueChanged('rating', changes)) {\n            this.rating = changes.rating.currentValue;\n        }\n\n        if (valueChanged('numOfStars', changes)) {\n            this.numOfStars = changes.numOfStars.currentValue;\n        }\n\n        //string\n        if (valueChanged('labelText', changes)) {\n            this.labelText = changes.labelText.currentValue;\n        }\n\n        if (valueChanged('staticColor', changes)) {\n            this.staticColor = changes.staticColor.currentValue;\n        }\n\n        if (valueChanged('size', changes)) {\n            this.size = changes.size.currentValue;\n        }\n\n        if (valueChanged('speed', changes)) {\n            this.speed = changes.speed.currentValue;\n        }\n\n        if (valueChanged('labelPosition', changes)) {\n            this.labelPosition = changes.labelPosition.currentValue;\n        }\n\n        if (valueChanged('starType', changes)) {\n            this.starType = changes.starType.currentValue;\n        }\n    }\n\n    /**\n     * onStarClicked\n     *\n     * Is fired when a star is clicked. And updated the rating value.\n     * This function returns if the disabled or readOnly\n     * property is set. If provided it emits the onClick event\n     * handler with the actual rating value.\n     *\n     * @param rating\n     */\n    protected onStarClicked(rating: number): void {\n\n        if (!this.interactionPossible()) {\n            return;\n        }\n\n        this.rating = rating;\n\n        //fire onClick event\n        let $event:IStarRatingOnClickEvent = {rating: rating};\n        if(typeof this.onClick === 'function') {\n            this.onClick({$event:$event});\n        }\n    }\n\n    protected onStarHover(rating: number): void {\n\n        if (!this.interactionPossible() || !this.showHoverStars) {\n            return;\n        }\n\n        this.hoverRating = rating?parseInt(rating.toString()):0;\n        //fire onHover event\n        let $event:IStarRatingOnHoverEvent = { hoverRating: this.hoverRating};\n        if(typeof this.onHover === 'function') {\n            this.onHover({$event:$event});\n        }\n\n    }\n\n    protected interactionPossible():boolean {\n        return  !this.readOnly && !this.disabled;\n    }\n\n    /**\n     * Get the closest matching element up the DOM tree.\n     * @private\n     * @param  {Element} elem     Starting element\n     * @param  {String}  selector Selector to match against\n     * @return {Boolean|Element}  Returns null if not match found\n     */\n    protected getClosest ( elem, selector ) {\n\n        // Element.matches() polyfill\n        if (!Element.prototype.matches) {\n            Element.prototype.matches =\n                Element.prototype.matchesSelector ||\n                Element.prototype.mozMatchesSelector ||\n                Element.prototype.msMatchesSelector ||\n                Element.prototype.oMatchesSelector ||\n                Element.prototype.webkitMatchesSelector ||\n                function (s) {\n                    var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                        i = matches.length;\n                    while (--i >= 0 && matches.item(i) !== this) {\n                    }\n                    return i > -1;\n                };\n        }\n\n        // Get closest match\n        for (; elem && elem !== document; elem = elem.parentNode) {\n            if (elem.matches(selector)) return elem;\n        }\n\n        return null;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/star-rating.controller.ts","import {StarRatingController} from \"./star-rating.controller\";\nimport starRatingTpl = require('./star-rating.tpl.html');\n\nexport class StarRatingComponent implements ng.IComponentOptions {\n\n    public bindings: any;\n    public controller: any;\n    public templateUrl: string;\n    public replace: boolean;\n\n    constructor() {\n        this.bindings = {\n              id: '<'\n            , rating: '<'\n            , showHalfStars: '<'\n            , showHoverStars: '<'\n            , numOfStars: '<'\n            , size: '<'\n            , space: '<'\n            , staticColor: '<'\n            , disabled: '<'\n            , starType: '<'\n            , labelText: '<'\n            , labelHidden: '<'\n            , labelPosition: '<'\n            , speed : '<'\n            , readOnly: '<'\n            , getColor: '<'\n            , getHalfStarVisible: '<'\n\n            , onHover: '&'\n            , onClick: '&'\n            , onRatingChange: '&'\n        };\n        this.replace = true;\n        this.controller = StarRatingController;\n        this.templateUrl = <string>starRatingTpl;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/star-rating.component.ts","var path = 'src/star-rating.tpl.html';\nvar html = \"<div id={{$ctrl.id}} class=rating ng-class=$ctrl.getComponentClassNames()> <div ng-show=$ctrl.labelText class=label-value>{{$ctrl.labelText}}</div> <div class=star-container ng-mouseleave=$ctrl.onStarHover()> <div class=star ng-repeat=\\\"star in $ctrl.stars track by $index\\\" ng-click=$ctrl.onStarClicked(star) ng-mouseover=$ctrl.onStarHover(star)> <i class=\\\"star-empty {{$ctrl.classEmpty}}\\\" ng-if=!$ctrl.svgVisible()></i> <i class=\\\"star-half {{$ctrl.classHalf}}\\\" ng-if=!$ctrl.svgVisible()></i> <i class=\\\"star-filled {{$ctrl.classFilled}}\\\" ng-if=!$ctrl.svgVisible()></i> <svg class=\\\"star-empty {{$ctrl.classEmpty}}\\\" ng-if=$ctrl.svgVisible()> <use xmlns:xlink=http://www.w3.org/1999/xlink xlink:href={{$ctrl.pathEmpty}}></use> </svg> <svg class=\\\"star-half {{$ctrl.classHalf}}\\\" ng-if=$ctrl.svgVisible()> <use xmlns:xlink=http://www.w3.org/1999/xlink xlink:href={{$ctrl.pathHalf}}></use> </svg> <svg class=\\\"star-filled {{$ctrl.classFilled}}\\\" ng-if=$ctrl.svgVisible()> <use xmlns:xlink=http://www.w3.org/1999/xlink xlink:href={{$ctrl.pathFilled}}></use> </svg> </div> </div> </div>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/star-rating.tpl.html\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}